- name: Configure Sepal instance
  hosts: "tag_Type_Sepal:&tag_Environment_{{ deploy_environment }}"
  user: ubuntu
  sudo: yes
  gather_facts: true

  vars_files:
    - vars/vars.yml
    - "{{ secret_vars_file }}"

  pre_tasks:
    - name: Create docker-registry certificate dir
      file:
        path: "/etc/docker/certs.d/{{ docker_repository_host }}"
        state: directory
    - name: Copy docker-registry certificate
      copy:
        src: ~/.sepal/certificates/docker-registry.crt
        dest: "/etc/docker/certs.d/{{ docker_repository_host }}/ca.crt"
    - name: Set sepal_host and ami_id var
      set_fact:
        sepal_host: "{{ custom_host if use_custom_host == true else inventory_hostname }}"
        ldap_host: "{{ custom_host if use_custom_host == true else inventory_hostname }}"
        sandbox_ami_id: "{{ ami_ids[region] }}"
        sepal_working_mode: "PRIVATE_LAN"

  roles:
    - role: unattended-upgrades
      unattended_origins_patterns:
        - 'origin=Ubuntu,archive=${distro_codename}-security'
        - 'o=Ubuntu,a=${distro_codename}-updates'

    - role: docker.ubuntu
      docker_version: '1.8.1-0~trusty'
      docker_group_members: ['ubuntu']
      docker_opts: '-H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock -g /data/docker/storage'

    - role: prepare-environment
    - role: prepare-aws-environment
    - role: run-ldap
    - role: run-mysql
    - role: run-geoserver
    - role: run-sepal-server
    - role: run-ssh-gateway
    - role: run-gateone
    - role: run-sepal-php
    - role: run-nginx
    - role: run-haproxy
    - role: pull-sandbox
