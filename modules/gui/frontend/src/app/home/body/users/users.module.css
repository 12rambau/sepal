.content {
    min-width: fit-content;
}

.number {
    text-align: right;
}

.pageControls {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}

.inviteUser {
    --right: 2.5rem;
    --bottom: 5rem;
    position: absolute;
    right: var(--right);
    bottom: var(--bottom);
    box-shadow: .1rem .1rem 2rem .2rem hsla(0, 0%, 5%, .6);
    z-index: 1;
}

@media only screen and (max-width: 500px) {
    .inviteUser {
        --right: 1rem;
        --bottom: 3.5rem;
    }
}

.searchControls {
    display:flex;
    flex-wrap: nowrap;
}

.search {
    flex-grow: 1;
    flex-shrink: 1;
    max-width: 17rem;
    margin-right: 2rem;
}

.search input {
    width: 100%;
    border: none;
}

.pageNavigation {
    flex-shrink: 0;
    justify-self: flex-end;
}

.pageInfo {
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    color: gray;
    font-size: small;
    margin-right: 1rem;
}

.grid {
    display: grid;
    grid-template-columns: 3fr 3fr 3fr repeat(6, 2fr);
    grid-template-rows: auto;
    column-gap: 1rem;
    width: 100%;
    padding: .1rem .3rem;
    align-items: center;
}

.grid.header {
    grid-template-areas: 
        'name status updateTime ib  ib  sb  sb  st  st '
        'name status updateTime ibq ibu sbq sbu stq stu';
    color: var(--look-default-color);
    user-select: none;
    border-bottom: 1px solid gray;
}

.grid.header > * {
    padding: .25rem 0;
}

.grid > * {
    white-space: nowrap;
    overflow: hidden;
}

.grid > .name {
    grid-area: name;
    align-self: end;
}

.grid > .status {
    grid-area: status;
    align-self: end;
}

.grid > .updateTime {
    grid-area: updateTime;
    align-self: end;
}

.grid > .instanceBudget {
    grid-area: ib;
    text-align: center;
    border-bottom: 1px solid gray;
}

.grid > .storageBudget {
    grid-area: sb;
    text-align: center;
    border-bottom: 1px solid gray;
}

.grid > .storage {
    grid-area: st;
    text-align: center;
    border-bottom: 1px solid gray;
}

.grid > .instanceBudgetQuota {
    grid-area: ibq;
}

.grid > .instanceBudgetUsed {
    grid-area: ibu;
}

.grid > .storageBudgetQuota {
    grid-area: sbq;
}

.grid > .storageBudgetUsed {
    grid-area: sbu;
}

.grid > .storageQuota {
    grid-area: stq;
}

.grid > .storageUsed {
    grid-area: stu;
}

.sorted {
    color: var(--success-color);
}

.users {
    background-color: var(--look-transparent-background-color);
    color: var(--look-transparent-color);
    line-height: 2rem;
    min-width: 60rem;
}

.users > :nth-child(even) {
    background-color: hsla(0, 0%, 100%, .03);
}

.users > .clickable:hover {
    cursor: pointer;
    background-color: var(--look-highlight-background-color);
    color: var(--look-highlight-color);
}

.sortingHandle {
    margin-left: .5rem;
}

.bottomBar {
    justify-content: center;
}
