- name: Configure Sandbox Image
  strategy: debug
  hosts: all
  user: ec2-user
  become: yes
  gather_facts: true

  vars_files:
    - "{{ secret_vars_file }}"

  tasks:
    - name: Create docker-registry certificate dir
      file:
        path: "/etc/docker/certs.d/{{ docker_repository_host }}"
        state: directory

    - name: Copy docker-registry certificate
      copy:
        src: "{{ config_home }}/certificates/docker-registry.crt"
        dest: "/etc/docker/certs.d/{{ docker_repository_host }}/ca.crt"

    - name: Upgrade yum packages
      yum: name=* state=latest

    - name: Install nfs-utils
      yum:
        name: "nfs-utils"

    - name: Install lvm
      yum:
        name: "lvm2"

    - name: Create /data/sepal
      file:
        path: "/data/sepal"
        state: directory

    - name: Create /data/sepal
      file:
        path: "/data/sepal/home"
        state: directory

    - name: Create /data/sepal
      file:
        path: "/data/sepal/shiny"
        state: directory

    - name: Create /data/sepal
      file:
        path: "/data/sepal/certificates"
        state: directory

    - name: Mount EFS Sepal Home Dir
      mount:
        name: "/data/sepal/home"
        fstype: "nfs4"
        state: "mounted"
        src: "{{ availability_zone }}.{{ efs_id }}.efs.{{ region }}.amazonaws.com:/data/sepal/home"

    - name: Mount EFS Sepal Shiny Dir
      mount:
        name: "/data/sepal/shiny"
        fstype: "nfs4"
        state: "mounted"
        src: "{{ availability_zone }}.{{ efs_id }}.efs.{{ region }}.amazonaws.com:/data/sepal/shiny"

    - name: Copy LDAP Certificate
      copy:
       src: "{{ config_home }}/certificates/ldap-ca.crt.pem"
       dest: "/data/sepal/certificates/ldap-ca.crt.pem"

    - name: Create Docker LVM Volume Group
      lvg: vg=vg-docker pvs=/dev/xvdf

    - name: Create Docker LVM Data Volume
      lvol: vg=vg-docker lv=data size=12g

    - name: Create Docker LVM Metadata Volume
      lvol: vg=vg-docker lv=metadata size=100%FREE

    - name: Install docker
      command: "amazon-linux-extras install docker"

    - name: Create /etc/docker
      file:
        path: "/etc/docker"
        state: directory

    - name: Copy /etc/docker/daemon.json
      copy: src=docker-daemon.json dest=/etc/docker/daemon.json

    - name: Start docker
      service: name=docker state=started

    - name: Add ec2-user to docker group
      user:
        name: ec2-user
        groups: docker

    - name: Login to docker registry
      command: "docker login -p '{{ docker_password }}' -u '{{ docker_username }}' {{ docker_repository_host }}"

    - name: Pull sandbox
      command: "docker pull {{ docker_repository_host }}/openforis/sandbox:{{ version }}"

    - name: Pull google-earth-engine
      command: "docker pull {{ docker_repository_host }}/openforis/google-earth-engine:{{ version }}"

    - name: Pull task-executor
      command: "docker pull {{ docker_repository_host }}/openforis/task-executor:{{ version }}"

    - name: Logout from docker registry
      command: "docker logout {{ docker_repository_host }}"