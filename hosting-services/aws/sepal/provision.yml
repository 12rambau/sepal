- name: Setup AWS
  hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - "{{ secret_vars_file }}"

  tasks:
    - name: Create Sepal-Storage security group
      ec2_group:
        name: "Sepal-Storage"
        description: The Sepal-Storage Security Group
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 168.202.0.0/16
            rule_desc: 'FAO'
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "{{ local_ip_address }}/32"
            rule_desc: 'Deployer'
        rules_egress:
          - proto: all
            from_port: 0
            to_port: 65535
            cidr_ip: 0.0.0.0/0
      register: sepal_storage_group

    - name: Provision Sepal-Storage instance
      ec2:
        key_name: "{{ region }}"
        group: "Sepal-Storage"
        instance_type: t2.small
        image: "{{ ami }}"
        region: "{{ region }}"
        zone: "{{ availability_zone }}"
        wait: true
        instance_tags:
          Name: "Sepal-Storage - {{ deploy_environment}}"
          Type: "SepalStorage"
          Environment: "{{ deploy_environment }}"
        exact_count: 1
        count_tag:
          Type: "SepalStorage"
          Environment: "{{ deploy_environment }}"
        volumes:
          - device_name: /dev/xvda
            delete_on_termination: false
            volume_type: gp2
            volume_size: 32
          - device_name: /dev/sdb
            delete_on_termination: false
            volume_type: gp2
            volume_size: 32
      register: started_ec2_sepal_storage

    - ec2_instance_info:
        region: "{{ region }}"
        filters:
          "tag:Type": "SepalStorage"
          "tag:Environment": "{{ deploy_environment }}"
      register: ec2_sepal_storage

    - set_fact:
        sepal_storage_ip: "{{ ec2_sepal_storage.instances[0].public_ip_address }}"

    - name: Create Sepal security group
      ec2_group:
        name: "Sepal"
        description: The Sepal Security Group
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 168.202.0.0/16
            rule_desc: 'FAO'
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
            rule_desc: 'HTTP'
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
            rule_desc: 'HTTPS'
          - proto: tcp
            from_port: 0
            to_port: 65535
            cidr_ip: 172.31.0.0/16
            rule_desc: 'Subnet'
          - proto: tcp
            from_port: 5672
            to_port: 5672
            cidr_ip: "{{ sepal_storage_ip }}/32"
            rule_desc: 'Sepal-Storage'
#          - proto: tcp
#            from_port: 5672
#            to_port: 5672
#            group_id: "{{ sepal_storage_group['owner_id'] }}/{{ sepal_storage_group['group_id'] }}/{{ sepal_storage_group['group_name'] }}"
#            rule_desc: 'Sepal-Storage'
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "{{ local_ip_address }}/32"
            rule_desc: 'Deployer'
        rules_egress:
          - proto: all
            from_port: 0
            to_port: 65535
            cidr_ip: 0.0.0.0/0

    - name: Create EFS security group
      ec2_group:
        name: EFS
        description: The EFS Security Group
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 2049
            to_port: 2049
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            from_port: 0
            to_port: 65535
            cidr_ip: 0.0.0.0/0

    - name: Provision Sepal instance
      ec2:
        key_name: "{{ region }}"
        group: "Sepal"
        instance_type: m5.xlarge
        image: "{{ ami }}"
        region: "{{ region }}"
        zone: "{{ availability_zone }}"
        wait: true
        exact_count: 1
        count_tag:
          Type: Sepal
          Environment: "{{ deploy_environment }}"
        instance_tags:
          Name: "Sepal - {{ deploy_environment}}"
          Type: Sepal
          Environment: "{{ deploy_environment }}"
        ebs_optimized: true
        volumes:
          - device_name: /dev/xvda
            delete_on_termination: false
            volume_type: gp2
            volume_size: 100
          - device_name: /dev/sdb
            delete_on_termination: false
            volume_type: gp2
            volume_size: 100
      register: started_ec2_sepal

    - name: Wait for SSH to be available on Sepal
      local_action: wait_for host="{{ item.public_ip }}"
                    port=22
                    state="started"
      with_items: "{{ started_ec2_sepal.instances }}"

    - name: Wait for SSH to be available on Sepal-Storage
      local_action: wait_for host="{{ item.public_ip }}"
                    port=22
                    state="started"
      with_items: "{{ started_ec2_sepal_storage.instances }}"
