- name: Configure Sepal instance
  hosts: "tag_Type_Sepal:&tag_Environment_{{ deploy_environment }}"
  user: ubuntu
  become: yes
  gather_facts: true

  vars_files:
    - vars/vars.yml
    - "{{ secret_vars_file }}"

  pre_tasks:
    - name: Create docker-registry certificate dir
      file:
        path: "/etc/docker/certs.d/{{ docker_repository_host }}"
        state: directory
    - name: Copy docker-registry certificate
      copy:
        src: ~/.sepal/certificates/docker-registry.crt
        dest: "/etc/docker/certs.d/{{ docker_repository_host }}/ca.crt"
    - name: Set sepal_host and ami_id var
      set_fact:
        sepal_host: "{{ custom_host if use_custom_host == true else ec2_ip_address }}"
        ldap_host: "{{ custom_host if use_custom_host == true else ec2_private_ip_address }}"

    - file: path="/data/docker/storage/devicemapper/metadata" state=directory
    - file: path="/data/docker/storage/tmp" state=directory

    - file: path="/data/sepal/etc" state=directory
    - template: src="./aws.properties" dest=/data/sepal/etc/aws.properties

  roles:
    - role: unattended-upgrades
      unattended_origins_patterns:
        - 'origin=Ubuntu,archive=${distro_codename}-security'
        - 'o=Ubuntu,a=${distro_codename}-updates'

    - { role: docker, users: ['ubuntu'] }
    - { role: aws-mount-efs }
#    - { role: run-module, module: ldap-backup }
    - { role: run-module, module: ldap }
    - { role: run-module, module: mysql }
    - { role: run-module, module: google-earth-engine}
    - { role: run-module, module: sepal-server }
    - { role: run-module, module: ssh-gateway }
    - { role: run-module, module: gateone }
    - { role: run-module, module: sepal-php }
    - { role: run-module, module: nginx }
    - { role: run-module, module: haproxy }
